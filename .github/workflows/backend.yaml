name: GCP Production CI/CD Pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: "training-batch-05"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-east1-docker.pkg.dev
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image to Artifact Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            us-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/routeen-back/prod:latest
          cache-from: type=registry,ref=us-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/routeen-back/buildcache
          cache-to: type=registry,ref=us-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/routeen-back/buildcache,mode=max

  deploy-to-GCP:
    runs-on: [self-hosted]
    needs: build-and-push-image
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-east1-docker.pkg.dev --quiet

      - name: Pull the latest image
        run: |
          docker pull us-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/routeen-back/prod:latest

      - name: Stop and remove existing container
        run: |
          docker stop routeen-back || true
          docker rm routeen-back || true

      - name: Deploy to Cloud Run
        run: |
          docker run -d \
            -p 3000:3001 \
            -e MONGODB_URI='${{ secrets.MONGODB_URI }}' \
            -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            -e CLOUDINARY_API_SECRET='${{ secrets.CLOUDINARY_API_SECRET }}' \
            -e NEXT_PUBLIC_BASE_URL='${{ secrets.NEXT_PUBLIC_BASE_URL }}' \
            -e TWILIO_ACCOUNT_SID='${{ secrets.TWILIO_ACCOUNT_SID }}' \
            -e TWILIO_AUTH_TOKEN='${{ secrets.TWILIO_AUTH_TOKEN }}' \
            -e TWILIO_WHATSAPP_NUMBER='${{ secrets.TWILIO_WHATSAPP_NUMBER }}' \
            --name routeen-back \
            -e DEBUG=false \
            --restart=unless-stopped \
            us-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/routeen-back/prod:latest

      - name: Clean up unused Docker images
        run: docker image prune -f
